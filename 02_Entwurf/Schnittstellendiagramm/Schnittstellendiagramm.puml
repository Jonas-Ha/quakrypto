@startuml name
top to bottom direction
skinparam pageMargin 10
skinparam pageExternalColor gray
skinparam pageBorderColor black

package Model
{
	interface IUebungsszenario
	{
		+ <<get, set>> AktuelleRolle() : Rolle
		+ <<get, set>> Rollen() : List<Rolle>
		+ <<get, set>> Schwierigkeitsgrad() : SchwierigkeitsgradEnum
		+ <<get, set>> Variante() : IVariante
		+ <<get, set>> StartPhase() : uint
		+ <<get, set>> EndPhase() : uint
		+ <<get, set>> Uebertragungskanal() : Uebertragungskanal
		+ <<get, set>> Aufzeichnung() : Aufzeichnung
		+ VeroeffentlicheLobby() : void
		+ RolleHinzufuegen() : bool
		+ RolleEntfernen() : bool
		+ NaechsterZug() : void
		+ ErzeugeProtokoll() : void
	}

	interface IVariante
	{
		+ <<get>> AktuellePhase() : uint
		+ <<get>> Schwierigkeitsgrad() : SchwierigkeitsgradEnum
		+ <<get>> VarianteName() : string
		+ <<get>> MoeglicheRollen() : List<RolleEnum>
		+ NaechsteRolle() : RolleEnum
		+ GebeHilfestellung() : List<OperationsEnum>
	}

	class Netzwerk
	{
		+ <<get, set>> VerfuegbareLobbys : ObservableCollection<UebungsszenarioNetzwerkBeitrittInfo>
		+ BeginneSucheNachLobbys() : void
		+ BeendeSucheNachLobbys() : void
		+ BeginneZyklischesSendenVonLobbyinformation() : void
		+ BeendeZyklischesSendenVonLobbyinformation() : void
	}

	class UebungsszenarioNetzwerkBeitrittInfo
	{
		+ <<get, set>> Lobbyname : string
		+ <<get, set>> Protokoll : string
		+ <<get, set>> Variante : string
		+ <<get, set>> Schwierigkeitsgrad : string
		+ <<get, set>> AliceIcon : BitMapImage
		+ <<get, set>> BobIcon : BitMapImage
		+ <<get, set>> EveIcon : BitMapImage
	}

	class Wiki
	{
		+ Wiki()
		+ ErstelleEintrag() : bool
		+ BearbeiteEintrag() : bool
		+ LoescheEintrag() : bool
	}
}

/'************************************************************'/
/'PACKAGE UI												  '/
/'************************************************************'/
package UI
{
	together{
		class LobbyErstellenViewModel
		{
			+ lobbyname: string 
			+ ausgProtokoll: int 
			+ ausgSchwierigkeit: int 
			+ ausgVariante: int 
			+ ausgPhaseStart: int 
			+ ausgPhaseEnde: int 
			+ netzwerkbasiert: bool 
			+ LobbyErstellenViewModel() : void
			+ LobbyErstellen() : void
		}

		class LobbyBeitretenViewModel
		{
			+ verfuegbareLobbys : ObservableCollection 
			+ ausgewaehlteLobby : int 
			+ LobbyBeitretenViewModel() : void 
			+ SpielBeitreten() : void 
		}

		class LobbyScreenViewModel
		{
			+ NameLobby : string
			+ Variante : string
			+ Schwierigkeitsgrad : string
			+ Phase : string
			+ Protokoll : string
			+ AliasAliceText : string
			+ AliasBobText : string
			+ AliasEveText : string
			+ PasswortAliceText : string
			+ PasswortBobText : string
			+ PasswortEveText : string
			+ BenutzerRollenCollection : ObservableCollection()
			+ LobbyViewModel() : void
			+ SpielStarten() : void
		}

		class WikiViewModel
		{
			+ WikiSeiten : ObservableCollection<WikiSeite>
			+ SelektierteWikiSeite : WikiSeite
			+ <<get, set>> EditierModus : bool
			+ LabelSichtbar : Visibility
			+ TextBoxSichtbar : Visibility
			+ SeitenErweitern : DelegateCommand
			+ SeitenBearbeiten : DelegateCommand
			+ SeiteEntfernen : DelegateCommand
			+ SeiteSelektiert : DelegateCommand
			+ WikiViewModel() : void
		}	

		class AufzeichnungViewModel
		{
			+ Aufzeichnung : List
			+ AufzeichnungViewModel() : void
		}

		class SpielViewModel
		{
			+ SpielViewModel() : void 
		}

		class SpielEveViewModel
		{
			+ SpielEveViewModel() : void 
		}

		class RolleEntsperrenViewModel
		{
			+ RolleEntsperrenViewModel() : void 
		}
	}
}

LobbyScreenViewModel-->IUebungsszenario
AufzeichnungViewModel-->IUebungsszenario
SpielViewModel-->IUebungsszenario
SpielEveViewModel-->IUebungsszenario
RolleEntsperrenViewModel-->IUebungsszenario
WikiViewModel --> Wiki
IUebungsszenario --> IVariante
LobbyBeitretenViewModel --> Netzwerk
LobbyErstellenViewModel --> Netzwerk
@enduml